function [drone, plank]  = getBagDataRefined(data)



drone(1).mocap.t = double(data.white_falcon_odometry_mocap.header.stamp.secs) + ...
    double(data.white_falcon_odometry_mocap.header.stamp.nsecs)*1e-9;
t0 = drone(1).mocap.t(1);
drone(1).mocap.pos = double([data.white_falcon_odometry_mocap.pose.pose.position.x;...
    data.white_falcon_odometry_mocap.pose.pose.position.y;...
    data.white_falcon_odometry_mocap.pose.pose.position.z]);
drone(1).mocap.t = drone(1).mocap.t-t0;

drone(1).log.t = double(data.white_falcon_log.header.stamp.secs) + ...
                    double(data.white_falcon_log.header.stamp.nsecs)*1e-9-t0;
drone(1).log.loop_rate = data.white_falcon_log.loop_rate;

drone(1).imu.t = double(data.white_falcon_imu.header.stamp.secs) + ...
                    double(data.white_falcon_imu.header.stamp.nsecs)*1e-9-t0;
drone(1).imu.accel = double([data.white_falcon_imu.angular_velocity.x; ...
                            data.white_falcon_imu.angular_velocity.y;...
                            data.white_falcon_imu.angular_velocity.z]);
                        
drone(1).est.t = double(data.white_falcon_odom_estimate.header.stamp.secs) + ...
                double(data.white_falcon_odom_estimate.header.stamp.nsecs)*1e-9-t0;
drone(1).est.pos = double([data.white_falcon_odom_estimate.pose.pose.position.x;...
                        data.white_falcon_odom_estimate.pose.pose.position.y;...
                        data.white_falcon_odom_estimate.pose.pose.position.z]);


drone(2).mocap.pos = double([data.red_falcon_odometry_mocap.pose.pose.position.x;...
    data.red_falcon_odometry_mocap.pose.pose.position.y;...
    data.red_falcon_odometry_mocap.pose.pose.position.z]);
drone(2).mocap.t = double(data.red_falcon_odometry_mocap.header.stamp.secs) + ...
    double(data.red_falcon_odometry_mocap.header.stamp.nsecs)*1e-9;
drone(2).mocap.t = drone(2).mocap.t-t0;

drone(2).log.t = double(data.red_falcon_log.header.stamp.secs) + ...
                    double(data.red_falcon_log.header.stamp.nsecs)*1e-9-t0;
drone(2).log.loop_rate = data.red_falcon_log.loop_rate;

drone(2).imu.t = double(data.red_falcon_imu.header.stamp.secs) + ...
                    double(data.red_falcon_imu.header.stamp.nsecs)*1e-9-t0;
drone(2).imu.accel = double([data.red_falcon_imu.angular_velocity.x; ...
                            data.red_falcon_imu.angular_velocity.y;...
                            data.red_falcon_imu.angular_velocity.z]);
                        
drone(2).est.t = double(data.red_falcon_odom_estimate.header.stamp.secs) + ...
                double(data.red_falcon_odom_estimate.header.stamp.nsecs)*1e-9-t0;
drone(2).est.pos = double([data.red_falcon_odom_estimate.pose.pose.position.x;...
                        data.red_falcon_odom_estimate.pose.pose.position.y;...
                        data.red_falcon_odom_estimate.pose.pose.position.z]);




drone(3).mocap.pos = double([data.blue_falcon_odometry_mocap.pose.pose.position.x;...
    data.blue_falcon_odometry_mocap.pose.pose.position.y;...
    data.blue_falcon_odometry_mocap.pose.pose.position.z]);
drone(3).mocap.t = double(data.blue_falcon_odometry_mocap.header.stamp.secs) + ...
    double(data.blue_falcon_odometry_mocap.header.stamp.nsecs)*1e-9;
drone(3).mocap.t = drone(3).mocap.t-t0;

drone(3).log.t = double(data.blue_falcon_log.header.stamp.secs) + ...
                    double(data.blue_falcon_log.header.stamp.nsecs)*1e-9-t0;
drone(3).log.loop_rate = data.blue_falcon_log.loop_rate;

drone(3).imu.t = double(data.blue_falcon_imu.header.stamp.secs) + ...
                    double(data.blue_falcon_imu.header.stamp.nsecs)*1e-9-t0;
drone(3).imu.accel = double([data.blue_falcon_imu.angular_velocity.x; ...
                            data.blue_falcon_imu.angular_velocity.y;...
                            data.blue_falcon_imu.angular_velocity.z]);
                        
drone(3).est.t = double(data.blue_falcon_odom_estimate.header.stamp.secs) + ...
                double(data.blue_falcon_odom_estimate.header.stamp.nsecs)*1e-9-t0;
drone(3).est.pos = double([data.blue_falcon_odom_estimate.pose.pose.position.x;...
                        data.blue_falcon_odom_estimate.pose.pose.position.y;...
                        data.blue_falcon_odom_estimate.pose.pose.position.z]);
                    
                    


plank.mocap.pos = double([data.plank_odometry_mocap.pose.pose.position.x; ...
                    data.plank_odometry_mocap.pose.pose.position.y; ...
                    data.plank_odometry_mocap.pose.pose.position.z]);
plank.mocap.t = double(data.plank_odometry_mocap.header.stamp.secs) + ...
                double(data.plank_odometry_mocap.header.stamp.nsecs)*1e-9 -t0;
            
            
            
end