<?xml version="1.0"?>

<!--

Gazebo Multirotor Definition File
Author: James Jackson (Original author)

-->

<robot name="multirotor"
    xmlns:xacro="http://ros.org/wiki/xacro">
    <!-- Properties -->
    <xacro:arg name="vehicle_name" default="dega_base"/>
    <xacro:arg name="color" default="Orange"/>

    <xacro:property name="namespace" value="$(arg vehicle_name)" />
    <xacro:property name="use_mesh_file" value="true" />
    <xacro:property name="mesh_file" value="model://qrotor_gazebo/meshes/dega.dae" />

    <!-- load dimensions -->
    <xacro:property name="load_mass" value="2" />
    <xacro:property name="load_length" value="0.5" />
    <xacro:property name="load_width" value="0.5" />
    <xacro:property name="load_height" value="0.2" />
    <xacro:property name="cable_length" value="1" />
    <xacro:property name="cable_radius" value="0.002" />
    <xacro:property name="cable_mass" value="0.01" />

    <xacro:property name="N" value="5"/>
    <xacro:property name="seg_length" value="${cable_length/N}" />
    <xacro:property name="seg_mass" value="${cable_mass/N}" />


    <xacro:property name="PI" value="3.1415926535897931"/>
    <xacro:property name="mass" value="0.9" />
    <xacro:property name="body_width" value="0.505" />
    <xacro:property name="body_height" value="0.1" />
    <xacro:property name="body_inertia">
        <inertia ixx="0.0049" ixy="0.0000055" ixz="0.0000054" iyy="0.0053" iyz="0.000021" izz="0.0098" />
    </xacro:property>
    <xacro:property name="color" value="$(arg color)" />
    <!-- Size of square 'camera' box -->
    <xacro:property name="camera_length" value="0.01" />
    <xacro:property name="camera_width" value="0.05" />
    <xacro:property name="camera_height" value="0.015" />
    <!-- Space btw top of beam and the each joint -->
    <xacro:property name="camera_offset" value="0.035" />

    <!-- MACRO: dummy link to create 3D rotation (in Euler Angles) -->
    <xacro:macro name="dummy_link" params="name">
        <link name="${name}">
            <gravity>0</gravity>
            <inertial>
                <origin rpy="0 0 0" xyz="0 0 0"/>
                <mass value="0.00001"/>
                <inertia ixx="0.000000001" ixy="0" ixz="0" iyy="0.000000001" iyz="0" izz="0.000000001"/>
            </inertial>
            <visual>
                <geometry>
                    <sphere radius="0.00000"/>
                </geometry>
            </visual>
        </link>
        <gazebo reference="${name}">
            <material>Gazebo/Black</material>
        </gazebo>
    </xacro:macro>

    <!-- MACRO: create a rotational joint ( TODO: debug this joint) -->
    <xacro:macro name="rotational_joint" params="parent child jx jy jz r p y">
        <xacro:dummy_link name="${parent}_${child}_dummylink1"/>
        <xacro:dummy_link name="${parent}_${child}_dummylink2"/>

        <joint name="${parent}_${child}_roll" type="continuous">
            <parent link="${parent}"/>
            <child link="${parent}_${child}_dummylink1"/>
            <axis xyz="1 0 0"/>
            <joint_properties damping="0.1" friction="0.0" />
            <origin xyz="${jx} ${jy} ${jz}" rpy="${r} 0 0"/>
        </joint>
        <joint name="${parent}_${child}_pitch" type="continuous">
            <parent link="${parent}_${child}_dummylink1"/>
            <child link="${parent}_${child}_dummylink2"/>
            <axis xyz="0 1 0"/>
            <joint_properties damping="0.1" friction="0.0" />
            <origin xyz="0 0 0" rpy="0 ${p} 0"/>
        </joint>
        <joint name="${parent}_${child}_yaw" type="continuous">
            <parent link="${parent}_${child}_dummylink2"/>
            <child link="${child}"/>
            <axis xyz="0 0 1"/>
            <joint_properties damping="0.1" friction="0.0" />
            <origin xyz="0 0 0" rpy="0 0 ${y}"/>
        </joint>
    </xacro:macro>

    <!-- gazebo robot description -->
    <link name="${namespace}/base_link">
        <inertial>
            <mass value="${mass}" />
            <!-- [kg] -->
            <origin xyz="0 0 0" />
            <xacro:insert_block name="body_inertia" />
        </inertial>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 ${-PI/2}"/>
            <geometry>
                <mesh filename="package://qrotor_description/meshes/dega.dae" scale="0.001 0.001 0.001"/>
            </geometry>
            <material name="orange"/>
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <cylinder length="${body_height}" radius="${body_width}"/>
            </geometry>
        </collision>
    </link>
    <gazebo reference="${namespace}/base_link">
        <material>Gazebo/${color}</material>
    </gazebo>

    <!-- Qrotorflight SIL Plugin -->
    <xacro:include filename="$(find qrotor_gazebo)/xacro/qrotor_gazebo.xacro"/>
    <xacro:generic_multirotor namespace="${namespace}" parent_link="${namespace}/base_link"/>

    <!-- Camera joint (fixed to the drone-frame) -->
    <joint name="${namespace}/camera_joint" type="fixed">
        <origin xyz="${camera_length} 0 ${-camera_offset}" rpy="0 ${PI/4} ${PI/2}"/>
        <parent link="${namespace}/base_link"/>
        <child link="${namespace}/camera_link"/>
    </joint>
    <joint name="${namespace}/camera_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
        <parent link="${namespace}/camera_link"/>
        <child link="${namespace}/camera_link_optical"/>
    </joint>
    <link name="${namespace}/camera_link_optical">
        <inertial>
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>

    <!-- Camera -->
    <link name="${namespace}/camera_link">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${camera_length} ${camera_width} ${camera_height}"/>
            </geometry>
        </collision>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${camera_length} ${camera_width} ${camera_height}"/>
            </geometry>
            <material name="red"/>
        </visual>
        <inertial>
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>
    <!-- camera -->
    <gazebo reference="${namespace}/camera_link">
        <material>Gazebo/Red</material>
        <sensor type="camera" name="color_camera">
            <update_rate>30.0</update_rate>
            <camera name="head">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>camera</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <link name="payload_link">
        <collision>
            <origin xyz="0 0 ${load_height/2}" rpy="0 0 0"/>
            <geometry>
                <box size="${load_length} ${load_width} ${load_height}"/>
            </geometry>
            <surface>
                <bounce restitution_coefficient = "0"/>
            </surface>
        </collision>
        <visual>
            <origin xyz="0 0 ${load_height/2}" rpy="0 0 ${-PI/2}"/>
            <geometry>
                <mesh filename="file:///$(find qrotor_description)/meshes/arcuo.dae" scale="${load_length*0.5} ${load_width*0.5} ${load_height*0.5}"/>
            </geometry>
            <material name="red"/>
        </visual>
        <inertial>
            <origin xyz="0 0 ${load_height/2}" rpy="0 0 0"/>
            <mass value="${load_mass}"/>
            <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.4"/>
        </inertial>
    </link>
    <xacro:rigidbody_plugin namespace="payload" parent_link="payload_link"/>

    <!-- <link name="cable_link">
        <visual>
            <origin xyz="0 0 ${cable_length/2}" rpy="0 0 0"/>
            <geometry>
                <cylinder length="${cable_length}" radius="${cable_radius}"/>
            </geometry>
        </visual>
        <inertial>
            <origin xyz="0 0 ${cable_length/2}" rpy="0 0 0"/>
            <mass value="0.0001"/>
            <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0004"/>
        </inertial>
    </link>
    <gazebo reference="cable_link">
        <material>Gazebo/Yellow</material>
        <self_collide>0</self_collide>
        <mu1>1</mu1>
        <mu2>1</mu2>
        <maxVel>0.0</maxVel>
        <minDepth>0.001</minDepth>
    </gazebo> -->

    <xacro:macro name="cable_segment" params="index">
        <link name="segment${index}">
            <collision>
                <origin xyz="0 0 ${seg_length/2}" rpy="0 0 0"/>
                <geometry>
                    <cylinder length="${seg_length}" radius="${cable_radius}"/>
                </geometry>
            </collision>
            <visual>
                <origin xyz="0 0 ${seg_length/2}" rpy="0 0 0"/>
                <geometry>
                    <cylinder length="${seg_length}" radius="${cable_radius}"/>
                </geometry>
            </visual>
            <inertial>
                <origin xyz="0 0 ${seg_length/2}" rpy="0 0 0"/>
                <mass value="${seg_mass}"/>
                <!-- TODO fix the inertia -->
                <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0004"/>
            </inertial>
        </link>
        <gazebo reference="segment${index}">
            <material>Gazebo/Black</material>
            <kp>10.0</kp>
            <kd>1</kd>
            <mu1>1.0</mu1>
            <mu2>1.0</mu2>
            <maxVel>0.0</maxVel>
            <minDepth>0.001</minDepth>
            <collision>
                <max_contacts>10</max_contacts>
                <surface>
                    <bounce>
                        <restitution_coefficient>0.0</restitution_coefficient>
                        <threshold>0.01</threshold>
                    </bounce>
                </surface>
            </collision>
        </gazebo>
    </xacro:macro>

    <xacro:cable_segment index="1"/>
    <xacro:rotational_joint parent="payload_link" child="segment1" jx="${load_length/2}" jy="-${load_width/2}" jz="${load_height}" r="${PI/2}" p="0" y="0"/>
    <xacro:cable_segment index="2"/>
    <xacro:rotational_joint parent="segment1" child="segment2" jx="0" jy="0" jz="${seg_length}" r="0" p="0" y="0"/>
    <xacro:cable_segment index="3"/>
    <xacro:rotational_joint parent="segment2" child="segment3" jx="0" jy="0" jz="${seg_length}" r="0" p="0" y="0"/>
    <xacro:cable_segment index="4"/>
    <xacro:rotational_joint parent="segment3" child="segment4" jx="0" jy="0" jz="${seg_length}" r="0" p="0" y="0"/>
    <xacro:cable_segment index="5"/>
    <xacro:rotational_joint parent="segment4" child="segment5" jx="0" jy="0" jz="${seg_length}" r="0" p="0" y="0"/>
    <xacro:rotational_joint parent="segment5" child="${namespace}/base_link" jx="0" jy="0" jz="${seg_length}" r="${-PI/2}" p="0" y="0"/>


</robot>
