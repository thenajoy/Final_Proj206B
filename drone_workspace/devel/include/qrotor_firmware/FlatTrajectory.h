// Generated by gencpp from file qrotor_firmware/FlatTrajectory.msg
// DO NOT EDIT!


#ifndef QROTOR_FIRMWARE_MESSAGE_FLATTRAJECTORY_H
#define QROTOR_FIRMWARE_MESSAGE_FLATTRAJECTORY_H

#include <ros/service_traits.h>


#include <qrotor_firmware/FlatTrajectoryRequest.h>
#include <qrotor_firmware/FlatTrajectoryResponse.h>


namespace qrotor_firmware
{

struct FlatTrajectory
{

typedef FlatTrajectoryRequest Request;
typedef FlatTrajectoryResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct FlatTrajectory
} // namespace qrotor_firmware


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::qrotor_firmware::FlatTrajectory > {
  static const char* value()
  {
    return "df0bac3bd179de8433b17a584a39b688";
  }

  static const char* value(const ::qrotor_firmware::FlatTrajectory&) { return value(); }
};

template<>
struct DataType< ::qrotor_firmware::FlatTrajectory > {
  static const char* value()
  {
    return "qrotor_firmware/FlatTrajectory";
  }

  static const char* value(const ::qrotor_firmware::FlatTrajectory&) { return value(); }
};


// service_traits::MD5Sum< ::qrotor_firmware::FlatTrajectoryRequest> should match
// service_traits::MD5Sum< ::qrotor_firmware::FlatTrajectory >
template<>
struct MD5Sum< ::qrotor_firmware::FlatTrajectoryRequest>
{
  static const char* value()
  {
    return MD5Sum< ::qrotor_firmware::FlatTrajectory >::value();
  }
  static const char* value(const ::qrotor_firmware::FlatTrajectoryRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::qrotor_firmware::FlatTrajectoryRequest> should match
// service_traits::DataType< ::qrotor_firmware::FlatTrajectory >
template<>
struct DataType< ::qrotor_firmware::FlatTrajectoryRequest>
{
  static const char* value()
  {
    return DataType< ::qrotor_firmware::FlatTrajectory >::value();
  }
  static const char* value(const ::qrotor_firmware::FlatTrajectoryRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::qrotor_firmware::FlatTrajectoryResponse> should match
// service_traits::MD5Sum< ::qrotor_firmware::FlatTrajectory >
template<>
struct MD5Sum< ::qrotor_firmware::FlatTrajectoryResponse>
{
  static const char* value()
  {
    return MD5Sum< ::qrotor_firmware::FlatTrajectory >::value();
  }
  static const char* value(const ::qrotor_firmware::FlatTrajectoryResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::qrotor_firmware::FlatTrajectoryResponse> should match
// service_traits::DataType< ::qrotor_firmware::FlatTrajectory >
template<>
struct DataType< ::qrotor_firmware::FlatTrajectoryResponse>
{
  static const char* value()
  {
    return DataType< ::qrotor_firmware::FlatTrajectory >::value();
  }
  static const char* value(const ::qrotor_firmware::FlatTrajectoryResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // QROTOR_FIRMWARE_MESSAGE_FLATTRAJECTORY_H
