## *********************************************************
##
## File autogenerated for the qrotor_ground package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'name': 'Default', 'type': '', 'state': True, 'cstate': 'true', 'id': 0, 'parent': 0, 'parameters': [{'name': 'distance', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'distance in meters', 'min': 0.5, 'max': 2.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'yaw', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'yaw in degrees', 'min': -180.0, 'max': 180.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'set', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Set Command', 'min': False, 'max': True, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'set_offboard', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Set Offboard', 'min': False, 'max': True, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}], 'groups': [{'name': 'Translate', 'type': '', 'state': True, 'cstate': 'true', 'id': 1, 'parent': 0, 'parameters': [{'name': 'x', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'x in meters', 'min': -2.0, 'max': 2.0, 'srcline': 13, 'srcfile': '/home/cc/ee106b/sp23/class/ee106b-abr/Desktop/drone_workspace/src/qrotor_firmware-devel/qrotor_ground/cfg/MultiDroneManager.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'y', 'type': 'double', 'default': 0.0, 'level': 0, 'description': 'y in meters', 'min': -2.0, 'max': 2.0, 'srcline': 14, 'srcfile': '/home/cc/ee106b/sp23/class/ee106b-abr/Desktop/drone_workspace/src/qrotor_firmware-devel/qrotor_ground/cfg/MultiDroneManager.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'z', 'type': 'double', 'default': 1.0, 'level': 0, 'description': 'z in meters', 'min': -2.0, 'max': 2.0, 'srcline': 15, 'srcfile': '/home/cc/ee106b/sp23/class/ee106b-abr/Desktop/drone_workspace/src/qrotor_firmware-devel/qrotor_ground/cfg/MultiDroneManager.cfg', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::TRANSLATE', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::translate', 'upper': 'TRANSLATE', 'lower': 'translate'}, {'name': 'Other', 'type': '', 'state': True, 'cstate': 'true', 'id': 2, 'parent': 0, 'parameters': [], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::OTHER', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::other', 'upper': 'OTHER', 'lower': 'other'}, {'name': 'Mission', 'type': '', 'state': True, 'cstate': 'true', 'id': 3, 'parent': 0, 'parameters': [{'name': 'takeoff', 'type': 'bool', 'default': False, 'level': 0, 'description': 'take_off_all', 'min': False, 'max': True, 'srcline': 27, 'srcfile': '/home/cc/ee106b/sp23/class/ee106b-abr/Desktop/drone_workspace/src/qrotor_firmware-devel/qrotor_ground/cfg/MultiDroneManager.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'landall', 'type': 'bool', 'default': False, 'level': 0, 'description': 'land_all', 'min': False, 'max': True, 'srcline': 28, 'srcfile': '/home/cc/ee106b/sp23/class/ee106b-abr/Desktop/drone_workspace/src/qrotor_firmware-devel/qrotor_ground/cfg/MultiDroneManager.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'killall', 'type': 'bool', 'default': False, 'level': 0, 'description': 'kill_all', 'min': False, 'max': True, 'srcline': 29, 'srcfile': '/home/cc/ee106b/sp23/class/ee106b-abr/Desktop/drone_workspace/src/qrotor_firmware-devel/qrotor_ground/cfg/MultiDroneManager.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'activate_mission', 'type': 'bool', 'default': False, 'level': 0, 'description': 'start and stop mission', 'min': False, 'max': True, 'srcline': 30, 'srcfile': '/home/cc/ee106b/sp23/class/ee106b-abr/Desktop/drone_workspace/src/qrotor_firmware-devel/qrotor_ground/cfg/MultiDroneManager.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'kill_mission', 'type': 'bool', 'default': False, 'level': 0, 'description': 'start and stop mission', 'min': False, 'max': True, 'srcline': 31, 'srcfile': '/home/cc/ee106b/sp23/class/ee106b-abr/Desktop/drone_workspace/src/qrotor_firmware-devel/qrotor_ground/cfg/MultiDroneManager.cfg', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}], 'groups': [], 'srcline': 124, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT::MISSION', 'parentclass': 'DEFAULT', 'parentname': 'Default', 'field': 'DEFAULT::mission', 'upper': 'MISSION', 'lower': 'mission'}], 'srcline': 246, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT', 'parentclass': '', 'parentname': 'Default', 'field': 'default', 'upper': 'DEFAULT', 'lower': 'groups'}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

